# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: "2.1"

volumes:
  orderer1.example.com:
  orderer2.example.com:
  peer0.org1.example.com:
  peer0.org2.example.com:
  peer0.org3.example.com:

networks:
  test:
    name: fabric_test

services:
  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer:2.2.6
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=9050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      # - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      # - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/orderer/orderer.genesis.block
      # - ORDERER_GENERAL_BOOTSTRAPFILE=../channel-artifacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Orderer1MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer1.example.com:9449
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../channel-artifacts/Org1Org2OrdererGenesis/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../organizations/ordererOrganizations/org1.example.com/orderers/orderer1.example.com/msp:/var/hyperledger/orderer/msp
      - ../organizations/ordererOrganizations/org1.example.com/orderers/orderer1.example.com/tls/:/var/hyperledger/orderer/tls
      - ${TEST_NETWORK_HOME}/config/orderer1/:/etc/hyperledger/fabric/
      - orderer1.example.com:/var/hyperledger/production/orderer
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
    ports:
      - 9050:9050
      - 9449:9449
    networks:
      - test

  orderer2.example.com:
    container_name: orderer2.example.com
    image: hyperledger/fabric-orderer:2.2.6
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=5050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      # - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      # - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/orderer/orderer.genesis.block
      # - ORDERER_GENERAL_BOOTSTRAPFILE=../channel-artifacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Orderer2MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer2.example.com:5449
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../channel-artifacts/Org1Org2OrdererGenesis/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../organizations/ordererOrganizations/org2.example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp
      - ../organizations/ordererOrganizations/org2.example.com/orderers/orderer2.example.com/tls/:/var/hyperledger/orderer/tls
      - ${TEST_NETWORK_HOME}/config/orderer2/:/etc/hyperledger/fabric/
      - orderer2.example.com:/var/hyperledger/production/orderer
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
    ports:
      - 5050:5050
      - 5449:5449
    networks:
      - test

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:2.2.6
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7050
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7050
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7050
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7050
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org1.example.com:9447
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.org1.example.com:/var/hyperledger/production
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
      - ${TEST_NETWORK_HOME}/config/org1/:/etc/hyperledger/fabric/
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7050:7050
      - 9447:9447
    networks:
      - test

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:2.2.6
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:8050
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8050
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:8051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:8050
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:8050
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org2.example.com:9448
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.org2.example.com:/var/hyperledger/production
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
      - ${TEST_NETWORK_HOME}/config/org2/:/etc/hyperledger/fabric/
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 8050:8050
      - 9448:9448
    networks:
      - test
  peer0.org3.example.com:
    container_name: peer0.org3.example.com
    image: hyperledger/fabric-peer:2.2.6
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org3.example.com
      - CORE_PEER_ADDRESS=peer0.org3.example.com:6050
      - CORE_PEER_LISTENADDRESS=0.0.0.0:6050
      - CORE_PEER_CHAINCODEADDRESS=peer0.org3.example.com:6051
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:6051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:6050
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:6050
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_OPERATIONS_LISTENADDRESS=peer0.org3.example.com:9446
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp:/etc/hyperledger/fabric/msp
      - ../organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.org3.example.com:/var/hyperledger/production
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
      - ${TEST_NETWORK_HOME}/config/org3/:/etc/hyperledger/fabric/
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 6050:6050
      - 9446:9446
    networks:
      - test
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:2.2.6
    tty: true
    stdin_open: true
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      # - ${TEST_NETWORK_HOME}/config:/etc/hyperledger/fabric
    depends_on:
      - peer0.org1.example.com
      - peer0.org2.example.com
      - peer0.org3.example.com
    networks:
      - test
